# ---IMAGE 1---- Use simplicité image to get webapp (for now)
FROM registry.simplicite.io/platform:5-latest-light as simplicite-main

# ---IMAGE 2---- Using Alpine's JDK
FROM alpine:latest as java-jdk-jre
RUN apk add --update openjdk17 binutils
RUN jlink --no-man-pages --no-header-files --compress=2 --output /javaruntime \
    # TODO this has to be tested
    --strip-debug \
    # TODO this can be optimized
    --add-modules ALL-MODULE-PATH

# ---IMAGE 3----
FROM alpine:latest
ENV DOCKER=alpine LANG=C.UTF-8 LANGUAGE=C.UTF-8 LC_ALL=C.UTF-8 LOG4J_FORMAT_MSG_NO_LOOKUPS=true
# TODO missing MANY ARGS & env variables compared to standard simplicité images

ENV JAVA_HOME=/opt/java/openjdk
COPY --from=alpine-jdk /javaruntime $JAVA_HOME
ENV PATH "${JAVA_HOME}/bin:${PATH}"

COPY --from=simplicite-main /usr/local/tomcat /usr/local/tomcat

# openjdk17
RUN apk add --no-cache bash libjpeg && \ 
    chmod +x /usr/local/tomcat/run && \
    addgroup -g 2000 simplicite && adduser -D -G simplicite -u 2000 simplicite

WORKDIR /usr/local/tomcat
EXPOSE 8080 8443 8444 8009 8005 8555
CMD [ "/usr/local/tomcat/run" ]
HEALTHCHECK --interval=30s --timeout=1s --start-period=300s CMD curl -sf http://localhost:8080/ping || exit 1